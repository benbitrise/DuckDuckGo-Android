buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath 'io.bitrise.gradle:remote-cache:1.2.2'
    }
}

plugins {
    id("de.fayard.refreshVersions") version "0.51.0"
}

rootDir.eachFile(groovy.io.FileType.DIRECTORIES) { File parent ->

    String[] ignoreFolders = ["buildSrc", "fastlane", "submodules", "node_modules", "gradle", "build", ".maestro"]
    if (!parent.name.startsWith(".") && !ignoreFolders.contains(parent.name)) {
        Boolean shouldAddProject = false
        parent.eachFile {
            if (it.name.contains("build.gradle")) {
                shouldAddProject = true
                return
            }
        }
        if (shouldAddProject) {
            include ":${parent.name}"
        } else {
            parent.eachFile(groovy.io.FileType.DIRECTORIES) { child -> // We only one level deep
                Boolean shouldAddSubProject = false
                child.eachFile {
                    if (it.name.contains("build.gradle")) {
                        shouldAddSubProject = true
                        return
                    }
                }
                if (shouldAddSubProject) {
                    include ":${child.name}"; project(":${child.name}").projectDir = new File("${parent.name}/${child.name}")
                }
            }
        }
    }
}

rootProject.children.each { subproject ->

    if (subproject.name == "vpn") {
        subproject.buildFileName = "${subproject.name}-build.gradle"
    }
}

import io.bitrise.gradle.cache.BitriseBuildCache
import io.bitrise.gradle.cache.BitriseBuildCacheServiceFactory

buildCache {

    def getFile = { dir, filename ->
        File file = new File("$dir$File.separator$filename")
        file?.exists() ? file : null
    }

    def getLocalProperties = { dir ->
        def file = getFile(dir, "local.properties")
        if (!file) {
            return null
        }

        Properties properties = new Properties()
        properties.load(file.newInputStream())
        return properties
    }

    local {
        enabled = false
    }

    registerBuildCacheService(BitriseBuildCache.class, BitriseBuildCacheServiceFactory.class)
    remote(BitriseBuildCache.class) {
        endpoint= "grpcs://xxxxxx-cache.services.bitrise.io:6666" // north-america, eu, india, brazil (use closest to you)
        enabled = true
        push = true
        def localProperties = new Properties()
        file('local.properties').withInputStream { localProperties.load(it) }
        authToken = localProperties.getProperty('io.bitrise.gradle.remoteCache.workspaceId', '') + ':'+ localProperties.getProperty('io.bitrise.gradle.remoteCache.authToken', '')
    }
}
